function __git_parse_dirty {
  if [ -f /etc/vagrant_box_build_time ]; then
    printf "o"
    return
  fi

  local status=$(git status --short 2> /dev/null)

  if [ $? -ne 0 ]; then
    printf "o"
    return
  fi

  if [ "${status}" == "" ]; then
    printf "o"
    return
  fi

  printf "x"
}

function __git_parse_branch {
  git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e "s/* \(.*\)/ <\1>/"
}

function __ruby_parse_version {
  if [ -x $(command -v rbenv) ]; then
    local str=`rbenv version-name`

    if [ "${str}" == "" ]; then
      return
    else
      printf " <${str}>"
    fi
  fi

  if [ -x $(command -v ruby) ]; then
    local str=`ruby -e 'puts "#{RUBY_VERSION}-p#{RUBY_PATCHLEVEL}"'`

    if [ "${str}" == "" ]; then
      return
    else
      printf " <${str}>"
    fi
  fi  
}

bash_prompt() {
  local NONE="\[\033[0m\]"

  local U="\[\033[01;32m\]"
  local R="\[\033[01;31m\]"
  local S="\[\033[01;37m\]"
  local H="\[\033[01;35m\]"
  local D="\[\033[01;34m\]"

  if [[ "${EUID}" == "0" ]] ; then
    export PS1="\n$R\u$S@$H\h: $D\w\$(__ruby_parse_version)\n<\$(__git_parse_dirty)$D>\$(__git_parse_branch) # $NONE"
  else
    export PS1="\n$U\u$S@$H\h: $D\w\$(__ruby_parse_version)\n<\$(__git_parse_dirty)$D>\$(__git_parse_branch) # $NONE"
  fi
}

bash_prompt
unset bash_prompt
